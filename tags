!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
_G.pp 	nvim/init.lua	/^_G.pp = function(arg)$/;"	f
_G.termcodes 	nvim/init.lua	/^_G.termcodes = function(key)$/;"	f
__call 	nvim/init.lua	/^		__call = function(self)$/;"	f
__call 	nvim/init.lua	/^	__call = function(_)$/;"	f
__call 	nvim/init.lua	/^	__call = function(self)$/;"	f
__index 	nvim/init.lua	/^	__index = function(self, _bufname) -- '変数[バッファ名]'でbufnr取得可能$/;"	f
_atMakeT.new	nvim/init.lua	/^function _atMakeT.new(makeprg)$/;"	f
_getpos	nvim/init.lua	/^local function _getpos(expr)$/;"	f
_join_buf_all_lines	nvim/init.lua	/^local function _join_buf_all_lines(bufnr)$/;"	f
_lua.luacheck 	nvim/init.lua	/^_lua.luacheck = function(path)$/;"	f
_lua.stylua 	nvim/init.lua	/^_lua.stylua = function()$/;"	f
atTest	nvim/init.lua	/^local function atTest()$/;"	f
auto_mkdir	nvim/init.lua	/^local function auto_mkdir(dir, force)$/;"	f
buffer_cache_table:new	nvim/init.lua	/^function buffer_cache_table:new()$/;"	f
callback 	nvim/init.lua	/^			callback = function()$/;"	f
callback 	nvim/init.lua	/^			callback = function(_)$/;"	f
callback 	nvim/init.lua	/^			callback = function(callback_args)$/;"	f
callback 	nvim/init.lua	/^	callback = function(_)$/;"	f
callback 	nvim/init.lua	/^	callback = function(args)$/;"	f
callback 	nvim/init.lua	/^	callback = function(callback_args)$/;"	f
confirm_should_mkdir	nvim/init.lua	/^local function confirm_should_mkdir(dir)$/;"	f
create_or_reuse_ac_input_buffer	nvim/init.lua	/^local function create_or_reuse_ac_input_buffer(test_cmd)$/;"	f
create_scratch_buffer	nvim/init.lua	/^local function create_scratch_buffer()$/;"	f
exec_ac_test	nvim/init.lua	/^local function exec_ac_test(test_cmd, input)$/;"	f
find_test_cmd	nvim/init.lua	/^local function find_test_cmd(test_cmd)$/;"	f
format_item 	nvim/init.lua	/^		format_item = function(item)$/;"	f
ft_patterns	nvim/init.lua	/^local function ft_patterns()$/;"	f
get_terminal_buffer_list	nvim/init.lua	/^local function get_terminal_buffer_list()$/;"	f
hoge	nvim/init.lua	/^local function hoge() end$/;"	f
open_split_win_with_buf	nvim/init.lua	/^local function open_split_win_with_buf(bufnr, direction)$/;"	f
open_terminal	nvim/init.lua	/^local function open_terminal(isTab, direction)$/;"	f
prompt_for_should_atMake	nvim/init.lua	/^local function prompt_for_should_atMake()$/;"	f
register_at_make_command	nvim/init.lua	/^local function register_at_make_command(atMakeT)$/;"	f
register_keymaps_for_ac_test	nvim/init.lua	/^local function register_keymaps_for_ac_test(test_cmd, bufnr)$/;"	f
register_keymaps_for_hide_term	nvim/init.lua	/^local function register_keymaps_for_hide_term(bufnr)$/;"	f
register_surround_pairs	nvim/init.lua	/^local function register_surround_pairs()$/;"	f
select_for_open_terminal	nvim/init.lua	/^local function select_for_open_terminal(terminal_buffer_list)$/;"	f
surround	nvim/init.lua	/^local function surround(pair)$/;"	f
toggle_term	nvim/init.lua	/^local function toggle_term()$/;"	f
